module Language.Lambda.FCU.FCUSyntax.Skel where

-- Haskell module generated by the BNF converter

import Language.Lambda.FCU.FCUSyntax.Abs
import Language.Lambda.FCU.FCUSyntax.ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transId :: Id -> Result
transId x = case x of
  Id string -> failure x
transTerm :: Term -> Result
transTerm x = case x of
  WTerm id -> failure x
  OTerm id -> failure x
  Constructor id -> failure x
  AppTerm term1 term2 -> failure x
  CompTerm id term -> failure x

