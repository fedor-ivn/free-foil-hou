## File generated by the BNF Converter (bnfc 2.9.5).

# Makefile for building the parser and test program.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : TestSyntax

# Rules for building the parser.

AbsSyntax.hs LexSyntax.x ParSyntax.y PrintSyntax.hs TestSyntax.hs : Syntax.cf
	bnfc --haskell Syntax.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

TestSyntax : AbsSyntax.hs LexSyntax.hs ParSyntax.hs PrintSyntax.hs TestSyntax.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f *.hi *.o *.log *.aux *.dvi

distclean : clean
	-rm -f AbsSyntax.hs AbsSyntax.hs.bak ComposOp.hs ComposOp.hs.bak DocSyntax.txt DocSyntax.txt.bak ErrM.hs ErrM.hs.bak LayoutSyntax.hs LayoutSyntax.hs.bak LexSyntax.x LexSyntax.x.bak ParSyntax.y ParSyntax.y.bak PrintSyntax.hs PrintSyntax.hs.bak SkelSyntax.hs SkelSyntax.hs.bak TestSyntax.hs TestSyntax.hs.bak XMLSyntax.hs XMLSyntax.hs.bak ASTSyntax.agda ASTSyntax.agda.bak ParserSyntax.agda ParserSyntax.agda.bak IOLib.agda IOLib.agda.bak Main.agda Main.agda.bak Syntax.dtd Syntax.dtd.bak TestSyntax LexSyntax.hs ParSyntax.hs ParSyntax.info ParDataSyntax.hs Makefile


# EOF
